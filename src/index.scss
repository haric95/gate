$white: #f2f2f2;
$grey-900: #393939;
$blue-600: #2a5c85;
$propagate-green: #00ff1a;
$propagate-green-2: #00ee00;
$gutter-size-desktop: 64px;
$gutter-size-mobile: 32px;

@keyframes shake {
  0% { transform: translate(1px, 1px) rotate(0deg); }
  10% { transform: translate(-1px, -2px) rotate(-1deg); }
  20% { transform: translate(-3px, 0px) rotate(1deg); }
  30% { transform: translate(3px, 2px) rotate(0deg); }
  40% { transform: translate(1px, -1px) rotate(1deg); }
  50% { transform: translate(-1px, 2px) rotate(-1deg); }
  60% { transform: translate(-3px, 1px) rotate(0deg); }
  70% { transform: translate(3px, 1px) rotate(-1deg); }
  80% { transform: translate(-1px, -1px) rotate(1deg); }
  90% { transform: translate(1px, 2px) rotate(0deg); }
  99% { transform: translate(1px, -2px) rotate(-1deg); }
}

@keyframes zoomies {
  0% { transform: scale(1, 1) }
  99% { transform: scale(2.5, 2.5); }
}

.play-animation {
  animation: shake 0.5s infinite;
  animation-iteration-count: infinite;
}

::selection {
  background: #ee00ee; /* WebKit/Blink Browsers */
}
::-moz-selection {
  background: #ee00ee; /* Gecko Browsers */
}

// Mixins
$breakpoints: (
  'mobile': 480px,
  'tablet': 768px,
  'laptop': 1200px,
) !default;

@mixin bp($breakpoint) {
  // If the key exists in the map
  @if map-has-key($breakpoints, $breakpoint) {
    // Prints a media query based on the value
    @media (max-width: map-get($breakpoints, $breakpoint)) {
      @content;
    }
  }

  // If the key doesn't exist in the map
  @else {
    @warn "Unfortunately, no value could be retrieved from `#{$breakpoint}`. "
        + "Available breakpoints are: #{map-keys($breakpoints)}.";
  }
}

@font-face {
  font-display: swap;
  font-family: 'Microgramma-D-OT-Bold-Extended';
  font-style: normal;
  font-weight: 400;
  src: url(/fonts/Microgramma-D-OT-Bold-Extended.ttf);
}

html,
body {
  background: #ffffff;
  color: black;
  margin: 0;
  overflow: hidden;
  padding: 0;
}

#root {
  height: 100vh;
  overflow: hidden;
  width: 100vw;
}

* {
  box-sizing: border-box;
  font-family: "Microgramma-D-OT-Bold-Extended", "sans-serif";
  font-weight: 300;
  letter-spacing: 0.2px;
}

h1, h2, h3, h4, p {
  margin: 0;
}

canvas {
  position: absolute;
}

.loading {
  padding: 10px;
  transform: translate3d(-50%, -50%, 0);
}

// Mixins
$breakpoints: (
  "mobile": 480px,
  "tablet": 768px,
  "laptop": 1200px,
) !default;

@mixin bp($breakpoint) {
  // If the key exists in the map
  @if map-has-key($breakpoints, $breakpoint) {
    // Prints a media query based on the value
    @media (max-width: map-get($breakpoints, $breakpoint)) {
      @content;
    }
  }

  // If the key doesn't exist in the map
  @else {
    @warn "Unfortunately, no value could be retrieved from `#{$breakpoint}`. "
        + "Available breakpoints are: #{map-keys($breakpoints)}.";
  }
}

.bg {
  position: fixed;
  width: 100vw;
  height: 100vh;
  top: 0px;
  object-fit: cover;
  background-position: center;
  display: flex;
  justify-content: space-between;
}

.right {
  padding-left: 32px;
  padding-right: 16px;
  height: 100%;
  width: calc(100% - 420px);
}

.ticket-window {
  width: 280px
}

@media only screen and (max-width: 768px) {

  .right {
    padding-left: 0;
    padding-right: 0;
    height: 320px;
    width: 100%;

    .img-1, .img-2, .img-3 {
      object-position: top;
      animation: shake;
      animation-iteration-count: 500;
    }
  }

  .ticket-window {
    width: 100%;
  }

  .bg {
    display: block;
    height: 100%;
    overflow-y: scroll;
  }
}


.dates {
  text-align: center;
  color: white;
  text-shadow: -4px -4px 0 $propagate-green, 4px -4px 0 $propagate-green, -4px 4px 0 $propagate-green, 4px 4px 0 $propagate-green;
  font-size: 64px;
  margin-bottom: 32px;
}

.content {
  position: fixed;
  top: 0;
  left: 0;
  width: 100vw;
  height: 100vh;
  overflow-x: hidden;
  overflow-y: auto;
}

.title {
  text-align: center;
  background-color: $propagate-green;
  margin-bottom: 128px;
  font-weight: 600;
  padding: 16px;
  opacity: 0.8;
}

.buy {
  display: flex;
  justify-content: center;
  margin-bottom: 32px;
  opacity: 0.8;
  padding-left: $gutter-size-desktop;
  padding-right: $gutter-size-desktop;

  @include bp('tablet') {
    align-items: center;
    flex-direction: column;
    padding-left: $gutter-size-mobile;
    padding-right: $gutter-size-mobile;
  }

  .ticket-window {
    padding: 16px;
    padding-top: 24px;
    padding-bottom: 24px;
    background-color: black;
    border: 4px solid $propagate-green;
    width: 50%;
    display: flex;
    flex-direction: column;
    align-items: center;
    color: white;
    text-align: center;

    @include bp('tablet') {
      width: 100%;
    }

    h1 {
      font-size: 48px;
      margin-bottom: 32px;
      color: $propagate-green;
      text-shadow: -4px -4px 0 white, 4px -4px 0 white, -4px 4px 0 white, 4px 4px 0 white;
    }

    h2 {
      font-size: 36px;
      margin-bottom: 12px;
    }

    p {
      font-size: 16px;
      margin-bottom: 24px;
    }

    &.left {
    }
  }

  .buy-button {
    cursor: pointer;
    padding: 12px;
    font-family: monospace;
    color: $propagate-green;
    background: black;
    transform-origin: center;
    transition: transform 0.5s linear;
  
    &:hover {
      transform: translateX(-50%), scale(1.1);
      background-color: white;
    }
  }

}

.lineup {
  margin-bottom: 128px;
  opacity: 0.8;
  margin-left: $gutter-size-desktop;
  margin-right: $gutter-size-desktop;
  background-color: white;
  padding: 32px;
  border: 4px solid black;


  @include bp('tablet') {
    margin-left: $gutter-size-mobile;
    margin-right: $gutter-size-mobile;
  }

  .live, .dj, .visual {
    h1 {
      margin-bottom: 16px;
    }
  }

  .live, .dj {
    margin-bottom: 36px;
  }

  .dj {
    text-align: right;
  }
}

.info {
  margin-bottom: 128px;

  .more-info {
    margin-bottom: 128px;
    opacity: 0.8;
    margin-left: $gutter-size-desktop;
    margin-right: $gutter-size-desktop;
    background-color: white;
    padding: 32px;
    border: 4px solid black;


    @include bp('tablet') {
      margin-left: $gutter-size-mobile;
      margin-right: $gutter-size-mobile;
    }
  }


  .menu {
    display: flex;
    justify-content: flex-start;

    img {
      width: 500px;
  
      @include bp('tablet') {
        width: 80%;
      }
    }
  }

  .sec {
    margin-bottom: 32px;
  }

  .right {
    text-align: right;
  }
}

.Collapsible__trigger {
  &.is-open {
    cursor: pointer;
  }
}

.collapsible {
  margin-bottom: 4px;

  &.active {
    cursor: pointer;
  }
}

.desc {
  padding: 16px;
  font-size: 12px;
  color: black;
  font-family: monospace;
}


.underline {
  text-decoration: underline;
}

.disclaimer {
  background-color: white;
  text-align: center;
  font-size: 16px;
  padding: 8px;
  margin-bottom: 128px;
  opacity: 0.8;
}

.upload-button {
  background-color: $propagate-green;
  border: 4px solid black;
  color: black;
  cursor: pointer;
  font-size: 36px;
  padding: 16px;
}


.upload {
  cursor: pointer;

  .upload-button {
    background-color: $propagate-green;
    border: 4px solid black;
    color: black;
    cursor: pointer;
    font-size: 36px;
    padding: 16px;
  }

  &.two {
    display: flex;
    flex-direction: column;

    input {
      margin-bottom: 16px;
      padding: 16px;
      outline: none;
    }
    
    p {
      font-size: 12px;
      margin-bottom: 0px;
    }

    button:disabled {
      background-color: #cccccc;
      cursor: default
    } 
  }
}


.dots span {
    animation: dots-1 1s infinite steps(1);
    -webkit-animation: dots-1 1s infinite steps(1);
}

.dots span:first-child + span {
    animation-name: dots-2;
    -webkit-animation-name: dots-2;
}

.dots span:first-child + span + span {
    animation-name: dots-3;
    -webkit-animation-name: dots-3;
}

.image-container {
  height: 100%;
  width: 100%;
  pointer-events: none;
}

.zoom {
  animation: zoomies 20s infinite;
  transform-origin: 30% 25%;
  animation-fill-mode: forwards;
}

.img-1 {
  position: relative;
}

.img-1::before {
  content: "";
  display: inline-block;
  background-color: green;
  width: 100%;
  height: 100%;
  position: absolute;
}

.password-box {
  outline: #11af00;

  
}


.left {
  overflow-y: auto;
  width: 420px;

  @include bp('tablet') {
    width: 100%;
  }
}

.password-box {
  margin-bottom: 16px;
  margin-right: 8px;
  
}